name: Go package

on:
  pull_request:
    branches:
      - "main"
  push:
    branches:
      - "main"
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version-file: "./go.mod"

      - name: Build
        env:
          CGO_ENABLED: 1
        run: go build -v ./...

      - name: Test
        env:
          CGO_ENABLED: 1
        run: go test -v ./...
  release:
    name: semantic-release
    needs:
      - build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      new-release-published: ${{ steps.semantic-release.outputs.new_release_published }}
      new-release-version: ${{ steps.semantic-release.outputs.new_release_version }}
    steps:
      - uses: actions/checkout@v4
      - id: semantic-release
        uses: cycjimmy/semantic-release-action@v3
        with:
          semantic_version: 18
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  goreleaser:
    name: GoReleaser
    needs:
      - release
    if: needs.release.outputs.new-release-published == 'true'
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - uses: goreleaser/goreleaser-action@v5
        with:
          distribution: goreleaser
          version: ~> 1
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          BREWTAP_TOKEN: ${{ secrets.BREWTAP_TOKEN }}

      - run: gh release edit v${{ needs.release.outputs.new-release-version }} --draft=false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
